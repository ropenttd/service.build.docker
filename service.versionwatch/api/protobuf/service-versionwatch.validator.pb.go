// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service-versionwatch.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *VersionData) Validate() error {
	if this.Released != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Released); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Released", err)
		}
	}
	if this.FirstSeen != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FirstSeen); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FirstSeen", err)
		}
	}
	if this.LastSeen != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.LastSeen); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("LastSeen", err)
		}
	}
	return nil
}
func (this *VersionListRequest) Validate() error {
	return nil
}
func (this *VersionGetNameRequest) Validate() error {
	return nil
}
func (this *VersionGetTrainRequest) Validate() error {
	return nil
}
func (this *VersionSingleResponse) Validate() error {
	if this.Version != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Version); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Version", err)
		}
	}
	return nil
}
func (this *VersionManyResponse) Validate() error {
	for _, item := range this.Version {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Version", err)
			}
		}
	}
	return nil
}
