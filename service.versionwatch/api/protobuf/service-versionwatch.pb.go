// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service-versionwatch.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionTrainTag int32

const (
	VersionTrainTag_UNKNOWN           VersionTrainTag = 0
	VersionTrainTag_NIGHTLY           VersionTrainTag = 1
	VersionTrainTag_ALPHA             VersionTrainTag = 2
	VersionTrainTag_BETA              VersionTrainTag = 3
	VersionTrainTag_RELEASE_CANDIDATE VersionTrainTag = 4
	VersionTrainTag_STABLE            VersionTrainTag = 5
	VersionTrainTag_SPECIAL           VersionTrainTag = -1
)

var VersionTrainTag_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "NIGHTLY",
	2:  "ALPHA",
	3:  "BETA",
	4:  "RELEASE_CANDIDATE",
	5:  "STABLE",
	-1: "SPECIAL",
}

var VersionTrainTag_value = map[string]int32{
	"UNKNOWN":           0,
	"NIGHTLY":           1,
	"ALPHA":             2,
	"BETA":              3,
	"RELEASE_CANDIDATE": 4,
	"STABLE":            5,
	"SPECIAL":           -1,
}

func (x VersionTrainTag) String() string {
	return proto.EnumName(VersionTrainTag_name, int32(x))
}

func (VersionTrainTag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{0}
}

// VersionData defines a single version of OpenTTD.
type VersionData struct {
	Version              string               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Released             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=released,proto3" json:"released,omitempty"`
	FirstSeen            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Train                VersionTrainTag      `protobuf:"varint,5,opt,name=train,proto3,enum=v1.VersionTrainTag" json:"train,omitempty"`
	Outdated             bool                 `protobuf:"varint,6,opt,name=outdated,proto3" json:"outdated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VersionData) Reset()         { *m = VersionData{} }
func (m *VersionData) String() string { return proto.CompactTextString(m) }
func (*VersionData) ProtoMessage()    {}
func (*VersionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{0}
}

func (m *VersionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionData.Unmarshal(m, b)
}
func (m *VersionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionData.Marshal(b, m, deterministic)
}
func (m *VersionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionData.Merge(m, src)
}
func (m *VersionData) XXX_Size() int {
	return xxx_messageInfo_VersionData.Size(m)
}
func (m *VersionData) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionData.DiscardUnknown(m)
}

var xxx_messageInfo_VersionData proto.InternalMessageInfo

func (m *VersionData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionData) GetReleased() *timestamp.Timestamp {
	if m != nil {
		return m.Released
	}
	return nil
}

func (m *VersionData) GetFirstSeen() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeen
	}
	return nil
}

func (m *VersionData) GetLastSeen() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (m *VersionData) GetTrain() VersionTrainTag {
	if m != nil {
		return m.Train
	}
	return VersionTrainTag_UNKNOWN
}

func (m *VersionData) GetOutdated() bool {
	if m != nil {
		return m.Outdated
	}
	return false
}

// A VersionListRequest is a request to the List endpoint. Returns VersionManyResponse.
type VersionListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionListRequest) Reset()         { *m = VersionListRequest{} }
func (m *VersionListRequest) String() string { return proto.CompactTextString(m) }
func (*VersionListRequest) ProtoMessage()    {}
func (*VersionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{1}
}

func (m *VersionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionListRequest.Unmarshal(m, b)
}
func (m *VersionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionListRequest.Marshal(b, m, deterministic)
}
func (m *VersionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionListRequest.Merge(m, src)
}
func (m *VersionListRequest) XXX_Size() int {
	return xxx_messageInfo_VersionListRequest.Size(m)
}
func (m *VersionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionListRequest proto.InternalMessageInfo

// A VersionGetNameRequest is a request to the GetByName endpoint. Returns VersionSingleResponse.
type VersionGetNameRequest struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionGetNameRequest) Reset()         { *m = VersionGetNameRequest{} }
func (m *VersionGetNameRequest) String() string { return proto.CompactTextString(m) }
func (*VersionGetNameRequest) ProtoMessage()    {}
func (*VersionGetNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{2}
}

func (m *VersionGetNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionGetNameRequest.Unmarshal(m, b)
}
func (m *VersionGetNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionGetNameRequest.Marshal(b, m, deterministic)
}
func (m *VersionGetNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionGetNameRequest.Merge(m, src)
}
func (m *VersionGetNameRequest) XXX_Size() int {
	return xxx_messageInfo_VersionGetNameRequest.Size(m)
}
func (m *VersionGetNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionGetNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionGetNameRequest proto.InternalMessageInfo

func (m *VersionGetNameRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// A VersionGetTrainRequest is a request to the GetByTrain endpoint. Returns VersionManyResponse.
type VersionGetTrainRequest struct {
	Train                VersionTrainTag `protobuf:"varint,1,opt,name=train,proto3,enum=v1.VersionTrainTag" json:"train,omitempty"`
	Outdated             bool            `protobuf:"varint,2,opt,name=outdated,proto3" json:"outdated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VersionGetTrainRequest) Reset()         { *m = VersionGetTrainRequest{} }
func (m *VersionGetTrainRequest) String() string { return proto.CompactTextString(m) }
func (*VersionGetTrainRequest) ProtoMessage()    {}
func (*VersionGetTrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{3}
}

func (m *VersionGetTrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionGetTrainRequest.Unmarshal(m, b)
}
func (m *VersionGetTrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionGetTrainRequest.Marshal(b, m, deterministic)
}
func (m *VersionGetTrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionGetTrainRequest.Merge(m, src)
}
func (m *VersionGetTrainRequest) XXX_Size() int {
	return xxx_messageInfo_VersionGetTrainRequest.Size(m)
}
func (m *VersionGetTrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionGetTrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionGetTrainRequest proto.InternalMessageInfo

func (m *VersionGetTrainRequest) GetTrain() VersionTrainTag {
	if m != nil {
		return m.Train
	}
	return VersionTrainTag_UNKNOWN
}

func (m *VersionGetTrainRequest) GetOutdated() bool {
	if m != nil {
		return m.Outdated
	}
	return false
}

type VersionSingleResponse struct {
	Version              *VersionData `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VersionSingleResponse) Reset()         { *m = VersionSingleResponse{} }
func (m *VersionSingleResponse) String() string { return proto.CompactTextString(m) }
func (*VersionSingleResponse) ProtoMessage()    {}
func (*VersionSingleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{4}
}

func (m *VersionSingleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionSingleResponse.Unmarshal(m, b)
}
func (m *VersionSingleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionSingleResponse.Marshal(b, m, deterministic)
}
func (m *VersionSingleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionSingleResponse.Merge(m, src)
}
func (m *VersionSingleResponse) XXX_Size() int {
	return xxx_messageInfo_VersionSingleResponse.Size(m)
}
func (m *VersionSingleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionSingleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionSingleResponse proto.InternalMessageInfo

func (m *VersionSingleResponse) GetVersion() *VersionData {
	if m != nil {
		return m.Version
	}
	return nil
}

type VersionManyResponse struct {
	Version              []*VersionData `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VersionManyResponse) Reset()         { *m = VersionManyResponse{} }
func (m *VersionManyResponse) String() string { return proto.CompactTextString(m) }
func (*VersionManyResponse) ProtoMessage()    {}
func (*VersionManyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58e8d81807b7c738, []int{5}
}

func (m *VersionManyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionManyResponse.Unmarshal(m, b)
}
func (m *VersionManyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionManyResponse.Marshal(b, m, deterministic)
}
func (m *VersionManyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionManyResponse.Merge(m, src)
}
func (m *VersionManyResponse) XXX_Size() int {
	return xxx_messageInfo_VersionManyResponse.Size(m)
}
func (m *VersionManyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionManyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionManyResponse proto.InternalMessageInfo

func (m *VersionManyResponse) GetVersion() []*VersionData {
	if m != nil {
		return m.Version
	}
	return nil
}

func init() {
	proto.RegisterEnum("v1.VersionTrainTag", VersionTrainTag_name, VersionTrainTag_value)
	proto.RegisterType((*VersionData)(nil), "v1.VersionData")
	proto.RegisterType((*VersionListRequest)(nil), "v1.VersionListRequest")
	proto.RegisterType((*VersionGetNameRequest)(nil), "v1.VersionGetNameRequest")
	proto.RegisterType((*VersionGetTrainRequest)(nil), "v1.VersionGetTrainRequest")
	proto.RegisterType((*VersionSingleResponse)(nil), "v1.VersionSingleResponse")
	proto.RegisterType((*VersionManyResponse)(nil), "v1.VersionManyResponse")
}

func init() { proto.RegisterFile("service-versionwatch.proto", fileDescriptor_58e8d81807b7c738) }

var fileDescriptor_58e8d81807b7c738 = []byte{
	// 517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xdb, 0x6e, 0xda, 0x40,
	0x10, 0x8d, 0xb9, 0x33, 0x48, 0x8d, 0xbb, 0xb9, 0xd4, 0xf5, 0x4b, 0x11, 0x4f, 0xa4, 0x12, 0x46,
	0x50, 0x29, 0x55, 0xde, 0x6a, 0xc0, 0x22, 0xa8, 0xae, 0x13, 0x19, 0xb7, 0x55, 0x9f, 0xd0, 0x02,
	0x13, 0xc7, 0x2a, 0x78, 0xa9, 0x77, 0x01, 0xf1, 0x2b, 0xfd, 0xac, 0xfe, 0x50, 0x2b, 0xdf, 0x88,
	0x89, 0xda, 0x44, 0xf5, 0x93, 0x67, 0xf6, 0x9c, 0x33, 0x67, 0xf7, 0x0c, 0xa8, 0x1c, 0x83, 0x8d,
	0x37, 0xc3, 0xd6, 0x06, 0x03, 0xee, 0x31, 0x7f, 0x4b, 0xc5, 0xec, 0x5e, 0x5b, 0x05, 0x4c, 0x30,
	0x92, 0xdb, 0x74, 0xd4, 0x4b, 0xd7, 0x13, 0xf7, 0xeb, 0xa9, 0x36, 0x63, 0xcb, 0xf6, 0x72, 0xeb,
	0x89, 0xef, 0x6c, 0xdb, 0x76, 0x59, 0x2b, 0x02, 0xb4, 0x36, 0x74, 0xe1, 0xcd, 0xa9, 0x60, 0x01,
	0x6f, 0xef, 0x7f, 0x63, 0xae, 0xfa, 0xc6, 0x65, 0xcc, 0x5d, 0x60, 0x3b, 0xaa, 0xa6, 0xeb, 0xbb,
	0xb6, 0xf0, 0x96, 0xc8, 0x05, 0x5d, 0xae, 0x62, 0x40, 0xe3, 0x67, 0x0e, 0x6a, 0x5f, 0xe2, 0x99,
	0x03, 0x2a, 0x28, 0x51, 0xa0, 0x9c, 0x58, 0x50, 0xa4, 0xba, 0xd4, 0xac, 0xda, 0x69, 0x49, 0x2e,
	0xa1, 0x12, 0xe0, 0x02, 0x29, 0xc7, 0xb9, 0x92, 0xab, 0x4b, 0xcd, 0x5a, 0x57, 0xd5, 0x62, 0x75,
	0x2d, 0x55, 0xd7, 0x9c, 0x54, 0xdd, 0xde, 0x63, 0xc9, 0x15, 0xc0, 0x9d, 0x17, 0x70, 0x31, 0xe1,
	0x88, 0xbe, 0x92, 0x7f, 0x96, 0x59, 0x8d, 0xd0, 0x63, 0x44, 0x9f, 0xbc, 0x87, 0xea, 0x82, 0xa6,
	0xcc, 0xc2, 0xf3, 0x33, 0x43, 0x70, 0x44, 0xbc, 0x80, 0xa2, 0x08, 0xa8, 0xe7, 0x2b, 0xc5, 0xba,
	0xd4, 0x7c, 0xd1, 0x3d, 0xd1, 0x36, 0x1d, 0x2d, 0xb9, 0xa5, 0x13, 0xf6, 0x1d, 0xea, 0xda, 0x31,
	0x82, 0xa8, 0x50, 0x61, 0x6b, 0x31, 0xa7, 0x02, 0xe7, 0x4a, 0xa9, 0x2e, 0x35, 0x2b, 0xf6, 0xbe,
	0x6e, 0x9c, 0x02, 0x49, 0x58, 0xa6, 0xc7, 0x85, 0x8d, 0x3f, 0xd6, 0xc8, 0x45, 0xa3, 0x03, 0x67,
	0x49, 0x77, 0x88, 0xc2, 0xa2, 0x4b, 0x4c, 0x0e, 0xfe, 0xfd, 0x76, 0x8d, 0x09, 0x9c, 0x3f, 0x50,
	0x22, 0x07, 0x29, 0x67, 0xef, 0x54, 0xfa, 0x2f, 0xa7, 0xb9, 0x47, 0x4e, 0x7b, 0x7b, 0x4f, 0x63,
	0xcf, 0x77, 0x17, 0x68, 0x23, 0x5f, 0x31, 0x9f, 0x23, 0xb9, 0x38, 0xf4, 0x54, 0xeb, 0x1e, 0x67,
	0x26, 0x84, 0x89, 0x3f, 0x98, 0xfc, 0x00, 0x27, 0x49, 0xff, 0x13, 0xf5, 0x77, 0x7f, 0x57, 0xc8,
	0x3f, 0xa5, 0xf0, 0x76, 0x07, 0xc7, 0x8f, 0xbc, 0x93, 0x1a, 0x94, 0x3f, 0x5b, 0x1f, 0xad, 0x9b,
	0xaf, 0x96, 0x7c, 0x14, 0x16, 0xd6, 0x68, 0x78, 0xed, 0x98, 0xdf, 0x64, 0x89, 0x54, 0xa1, 0xa8,
	0x9b, 0xb7, 0xd7, 0xba, 0x9c, 0x23, 0x15, 0x28, 0xf4, 0x0c, 0x47, 0x97, 0xf3, 0xe4, 0x0c, 0x5e,
	0xda, 0x86, 0x69, 0xe8, 0x63, 0x63, 0xd2, 0xd7, 0xad, 0xc1, 0x68, 0xa0, 0x3b, 0x86, 0x5c, 0x20,
	0x00, 0xa5, 0xb1, 0xa3, 0xf7, 0x4c, 0x43, 0x2e, 0x92, 0x53, 0x28, 0x8f, 0x6f, 0x8d, 0xfe, 0x48,
	0x37, 0xe5, 0xdf, 0xe9, 0x27, 0x75, 0x7f, 0x49, 0x50, 0xbb, 0x71, 0x9c, 0x41, 0x32, 0x9f, 0x5c,
	0x41, 0x21, 0xcc, 0x8c, 0x9c, 0x67, 0xcc, 0x66, 0x42, 0x54, 0x5f, 0x65, 0xfa, 0xd9, 0xeb, 0x36,
	0x8e, 0x48, 0x1f, 0xaa, 0x43, 0x14, 0xbd, 0x5d, 0x18, 0x2d, 0x79, 0x9d, 0xc1, 0x1d, 0xc6, 0xad,
	0x66, 0x8f, 0x0e, 0x5f, 0x3d, 0x12, 0x81, 0x48, 0xc4, 0x89, 0xa3, 0x3b, 0x54, 0xc9, 0x6e, 0xc0,
	0x13, 0x4e, 0xa6, 0xa5, 0x68, 0xc9, 0xdf, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x63, 0x1e,
	0x17, 0x1e, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OTTDVersionClient is the client API for OTTDVersion service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OTTDVersionClient interface {
	// List returns all known Versions.
	List(ctx context.Context, in *VersionListRequest, opts ...grpc.CallOption) (*VersionManyResponse, error)
	GetByName(ctx context.Context, in *VersionGetNameRequest, opts ...grpc.CallOption) (*VersionSingleResponse, error)
	GetByTrain(ctx context.Context, in *VersionGetTrainRequest, opts ...grpc.CallOption) (*VersionManyResponse, error)
}

type oTTDVersionClient struct {
	cc *grpc.ClientConn
}

func NewOTTDVersionClient(cc *grpc.ClientConn) OTTDVersionClient {
	return &oTTDVersionClient{cc}
}

func (c *oTTDVersionClient) List(ctx context.Context, in *VersionListRequest, opts ...grpc.CallOption) (*VersionManyResponse, error) {
	out := new(VersionManyResponse)
	err := c.cc.Invoke(ctx, "/v1.OTTDVersion/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oTTDVersionClient) GetByName(ctx context.Context, in *VersionGetNameRequest, opts ...grpc.CallOption) (*VersionSingleResponse, error) {
	out := new(VersionSingleResponse)
	err := c.cc.Invoke(ctx, "/v1.OTTDVersion/GetByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oTTDVersionClient) GetByTrain(ctx context.Context, in *VersionGetTrainRequest, opts ...grpc.CallOption) (*VersionManyResponse, error) {
	out := new(VersionManyResponse)
	err := c.cc.Invoke(ctx, "/v1.OTTDVersion/GetByTrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OTTDVersionServer is the server API for OTTDVersion service.
type OTTDVersionServer interface {
	// List returns all known Versions.
	List(context.Context, *VersionListRequest) (*VersionManyResponse, error)
	GetByName(context.Context, *VersionGetNameRequest) (*VersionSingleResponse, error)
	GetByTrain(context.Context, *VersionGetTrainRequest) (*VersionManyResponse, error)
}

// UnimplementedOTTDVersionServer can be embedded to have forward compatible implementations.
type UnimplementedOTTDVersionServer struct {
}

func (*UnimplementedOTTDVersionServer) List(ctx context.Context, req *VersionListRequest) (*VersionManyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedOTTDVersionServer) GetByName(ctx context.Context, req *VersionGetNameRequest) (*VersionSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByName not implemented")
}
func (*UnimplementedOTTDVersionServer) GetByTrain(ctx context.Context, req *VersionGetTrainRequest) (*VersionManyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByTrain not implemented")
}

func RegisterOTTDVersionServer(s *grpc.Server, srv OTTDVersionServer) {
	s.RegisterService(&_OTTDVersion_serviceDesc, srv)
}

func _OTTDVersion_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTTDVersionServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.OTTDVersion/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTTDVersionServer).List(ctx, req.(*VersionListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OTTDVersion_GetByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionGetNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTTDVersionServer).GetByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.OTTDVersion/GetByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTTDVersionServer).GetByName(ctx, req.(*VersionGetNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OTTDVersion_GetByTrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionGetTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTTDVersionServer).GetByTrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.OTTDVersion/GetByTrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTTDVersionServer).GetByTrain(ctx, req.(*VersionGetTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OTTDVersion_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.OTTDVersion",
	HandlerType: (*OTTDVersionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _OTTDVersion_List_Handler,
		},
		{
			MethodName: "GetByName",
			Handler:    _OTTDVersion_GetByName_Handler,
		},
		{
			MethodName: "GetByTrain",
			Handler:    _OTTDVersion_GetByTrain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service-versionwatch.proto",
}
